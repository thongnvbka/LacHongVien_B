@model ViELearn.BackEnd.Models.ApplicationUser

<div class="modal-header">
    <h4>Thông tin chi tiết người dùng</h4>
</div>
<div class="modal-body" style="overflow:unset;">
    @using (Ajax.BeginForm("SaveDetailsUser", "UnitUserManage", new AjaxOptions { HttpMethod = "POST", OnSuccess = "SaveUserDetailAlert" }, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <input type="hidden" name="Id" value="@Model.Id">
        <div class="form-group">
            @Html.LabelFor(m => m.UserName, "Tên đăng nhập", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @readonly = "true" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.DisplayName, "Tên hiển thị", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.DisplayName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, "Thư điện tử", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @readonly = "true"})
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label">Thuộc nhóm người dùng</label>
            <div class="col-md-10">
                @Html.ListBox("lstUserInRole", (MultiSelectList)ViewBag.SelectLstRoles, new { @class = "mt-multiselect btn btn-default", @multiple = "multiple", @data_label = "left", @data_width = "100%", @data_filter = "true", @id = "ddlLstUserInRole" })
            </div>
        </div>
        <div class="form-actions">
            <div class="row">
                <div class="col" style="text-align:center">
                    <button type="submit" class="btn blue">Lưu thay đổi</button>
                </div>
            </div>
        </div>
    }
</div>
<div class="modal-footer">
    <button type="button" class="btn default" data-dismiss="modal">Đóng</button>
</div>

<script type="text/javascript">
    function SaveUserDetailAlert(data) {
        if (data == "Success") {
            tableUserInUnitControl.bootstrapTable('refresh');
            $('#ajaxModalProject').modal('toggle');
            bootbox.alert("Thay đổi thành công");
        }
        else
            bootbox.alert(data);
    };

    $("#ddlLstUserInRole").select2();
    //$("#ddlLstUserInRole").each(function () {
    //    var t, a = $(this).attr("class"),
    //        i = $(this).data("clickable-groups") ? $(this).data("clickable-groups") : !1,
    //        l = $(this).data("collapse-groups") ? $(this).data("collapse-groups") : !1,
    //        o = $(this).data("drop-right") ? $(this).data("drop-right") : !1,
    //        e = ($(this).data("drop-up") ? $(this).data("drop-up") : !1, $(this).data("select-all") ? $(this).data("select-all") : !1),
    //        s = $(this).data("width") ? $(this).data("width") : "",
    //        n = $(this).data("height") ? $(this).data("height") : "",
    //        d = $(this).data("filter") ? $(this).data("filter") : !1,
    //        h = function (t, a, i) {
    //            alert("Changed option " + $(t).val() + ".")
    //        },
    //        r = function (t) {
    //            alert("Dropdown shown.")
    //        },
    //        c = function (t) {
    //            alert("Dropdown Hidden.")
    //        },
    //        p = 1 == $(this).data("action-onchange") ? h : "",
    //        u = 1 == $(this).data("action-dropdownshow") ? r : "",
    //        b = 1 == $(this).data("action-dropdownhide") ? c : "";
    //        t = $(this).attr("multiple") ? '<li class="mt-checkbox-list"><a href="javascript:void(0);"><label class="mt-checkbox"> <span></span></label></a></li>' : '<li><a href="javascript:void(0);"><label></label></a></li>', $(this).multiselect({
    //        enableClickableOptGroups: i,
    //        enableCollapsibleOptGroups: l,
    //        disableIfEmpty: !0,
    //        enableFiltering: d,
    //        enableCaseInsensitiveFiltering: true,
    //        includeSelectAllOption: true,
    //        maxHeight: 150,
    //        includeSelectAllOption: e,
    //        dropRight: o,
    //        buttonWidth: s,
    //        maxHeight: n,
    //        onChange: p,
    //        onDropdownShow: u,
    //        onDropdownHide: b,
    //        buttonClass: a,
    //    })
    //});
</script>