@using ViELearn.BackEnd.Models
@model GroupedUserViewModel

@{
    ViewBag.Title = "Danh sách người dùng";
    Layout = "~/Views/Shared/_Layoutv3.cshtml";
}

@section stylePageLever
{
    <link rel="stylesheet" type="text/css" href="~/UITheme/assets/global/plugins/jstree/dist/themes/default/style.min.css">
}

<script type="text/javascript" src="~/Scripts/jstree-3.3.2.min.js"></script>
<script type="text/javascript" src="~/Scripts/jstreegrid.js"></script>

@section actionMenu{
    <ul class="page-breadcrumb">
        <li> <i class="icon-home"></i> <a href="/">Trang chủ</a> <i class="fa fa-angle-right"></i> </li>
        <li> <span>Quản trị hệ thống</span> <i class="fa fa-angle-right"></i> </li>
        <li> <span>@ViewBag.Title</span> </li>
    </ul>
    <div class="page-toolbar">
    </div>
}

<div class="row">
    <div class="col-md-8">
        <a href="#" data-width="60%" data-url="@Url.Action("Register", "Account")" class="btn blue" onclick="OpenModalCustom(this)"><i class="fa fa-plus"></i>Thêm mới người dùng</a>
    </div>
    <div class="col-md-1">
        <button type="button" class="btn green-steel" style="margin-left: 5px" id="btnSetManyUserToRole" disabled title="Phân ngươi dùng được chọn vào nhóm"><i class="fa fa-magic"></i></button>
    </div>
    <div class="col-md-3">
        @Html.ListBox("lstAccessAllRole", (MultiSelectList)ViewBag.SelectLstAllRoles, new { @class = "mt-multiselect btn btn-default", @multiple = "multiple", @data_label = "left", @data_width = "100%", @data_filter = "true", @id = "ddlLstAccessAllRole" })
    </div>
</div>
<table id="tableUserInUnit"
       data-id-field="Id"
       data-toggle="tableUserInUnit"
       data-show-refresh="true"
       data-search="true">
    <thead>
        <tr>
            <th data-field="state" data-checkbox="true"></th>
            <th data-field="UserName" data-align="center" data-formatter="operateName" data-sortable="true">Tên đăng nhập</th>
            <th data-field="DisplayName" data-align="center">Tên người dùng</th>
            <th data-field="RoleType" data-formatter="operateSetRight" data-align="center">Phân quyền</th>
            <th data-field="Id" data-formatter="operateDelete" data-align="center">#</th>
        </tr>
    </thead>
</table>


<script type="text/javascript">
    var tableUserInUnitControl = $('#tableUserInUnit');
    var $btnSetManyUserToRole = $('#btnSetManyUserToRole');
    tableUserInUnitControl.bootstrapTable({
        method: "post",
        url: "@Url.Action("GetListUserInUnit", "UnitUserManage")",
        pagination: "true",
        sidePagination: "client",
        pageSize: 10,
        pageList: "[5,10,20,30,50]",
        select: true
    });

    function operateName(value, row, index) {
        return [
                '<a href="#" data-width="60%" data-url="../UnitUserManage/DetailsUser?userId=' + row.Id + '" onclick="OpenModalCustom(this);">' + row.UserName + '</a>'
        ].join('');
    }

    function operateDelete(value, row, index) {
        return [
                '<i class="fa fa-trash-o btn-save" id="' + value + '" data-id="' + value + '" style="color:orangered;cursor:pointer;" onclick="DeleteUserFromRole(this)">',
                '</i>'
        ].join('');
    }

    function operateSetRight(value, row, index) {
        return [
                '<a href="#" data-width="80%" data-url="../SysMenuManage/GetUserAccessRight?userId=' + row.Id + '&isPopup=1" onclick="OpenModalCustom(this);">' + 'Phân quyền' + '</a>'
        ].join('');
    }

    tableUserInUnitControl.on('check.bs.table uncheck.bs.table ' + 'check-all.bs.table uncheck-all.bs.table', function () {
            $btnSetManyUserToRole.prop('disabled', !tableUserInUnitControl.bootstrapTable('getSelections').length);
            selections = getIdSelections();
    });

    function getIdSelections() {
        return $.map(tableUserInUnitControl.bootstrapTable('getSelections'), function (row) {
            return row.Id
        });
    }

    $btnSetManyUserToRole.click(function () {
        var dialogWaiting = bootbox.dialog({
            title: 'Phân người dùng vào nhóm',
            message: '<p><i class="fa fa-spin fa-spinner"></i> Xin chờ trong giây lát...</p>'
        });
        var ids = getIdSelections();
        var lstAccessSelectedRole = [];
        $('#ddlLstAccessAllRole :selected').each(function (i, selected) {
            lstAccessSelectedRole[i] = $(selected).val();
        });
        var dataPostGetData = JSON.stringify({ 'lstUserId': ids, 'lstAccessSelectedRole': lstAccessSelectedRole });
        $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: "../UnitUserManage/SaveManyUserToRole",
            data: dataPostGetData,
            success: function (resultData) {

                if (resultData.Msg == "Success") {
                    dialogWaiting.init(function () {
                        dialogWaiting.find('.bootbox-body').html('Đã thực hiện xong!');
                    });
                    tableUserInUnitControl.bootstrapTable('uncheckAll');
                    $btnSetManyUserToRole.prop('disabled', true);
                }
                else {
                    dialogWaiting.init(function () {
                        dialogWaiting.find('.bootbox-body').html('Có lỗi xảy ra, vui lòng thực hiện lại!');
                    });
                }
            },
            failure: function (response) {
                dialogWaiting.init(function () {
                    dialogWaiting.find('.bootbox-body').html('Có lỗi xảy ra, vui lòng thực hiện lại!');
                });
            }
        });
    });

    $(document).ready(function () {
        $("#ddlLstAccessAllRole").select2();
    });

    //$(document).ready(function () {
    //    $("#ddlLstAccessAllRole").each(function () {
    //        var t, a = $(this).attr("class"),
    //            i = $(this).data("clickable-groups") ? $(this).data("clickable-groups") : !1,
    //            l = $(this).data("collapse-groups") ? $(this).data("collapse-groups") : !1,
    //            o = $(this).data("drop-right") ? $(this).data("drop-right") : !1,
    //            e = ($(this).data("drop-up") ? $(this).data("drop-up") : !1, $(this).data("select-all") ? $(this).data("select-all") : !1),
    //            s = $(this).data("width") ? $(this).data("width") : "",
    //            n = $(this).data("height") ? $(this).data("height") : "",
    //            d = $(this).data("filter") ? $(this).data("filter") : !1,
    //            h = function (t, a, i) {
    //                alert("Changed option " + $(t).val() + ".")
    //            },
    //            r = function (t) {
    //                alert("Dropdown shown.")
    //            },
    //            c = function (t) {
    //                alert("Dropdown Hidden.")
    //            },
    //            p = 1 == $(this).data("action-onchange") ? h : "",
    //            u = 1 == $(this).data("action-dropdownshow") ? r : "",
    //            b = 1 == $(this).data("action-dropdownhide") ? c : "";
    //        t = $(this).attr("multiple") ? '<li class="mt-checkbox-list"><a href="javascript:void(0);"><label class="mt-checkbox"> <span></span></label></a></li>' : '<li><a href="javascript:void(0);"><label></label></a></li>', $(this).multiselect({
    //            enableClickableOptGroups: i,
    //            enableCollapsibleOptGroups: l,
    //            disableIfEmpty: !0,
    //            enableFiltering: d,
    //            enableCaseInsensitiveFiltering: true,
    //            includeSelectAllOption: true,
    //            maxHeight: 150,
    //            includeSelectAllOption: e,
    //            dropRight: o,
    //            buttonWidth: s,
    //            maxHeight: n,
    //            onChange: p,
    //            onDropdownShow: u,
    //            onDropdownHide: b,
    //            buttonClass: a,
    //        })
    //    });
    //});
</script>