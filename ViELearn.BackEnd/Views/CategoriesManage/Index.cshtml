@using ViELearn.Models.ProjectModels

@{
    ViewBag.Title = "Quản lý Chuyên mục";
    Layout = "~/Views/Shared/_Layoutv3.cshtml";
}

@section stylePageLever
{
    <link href="~/UITheme/assets/global/plugins/bootstrap-table/bootstrap-table.min.css" rel="stylesheet" type="text/css" />
}


@section actionMenu{
    <ul class="page-breadcrumb">
        <li> <i class="icon-home"></i> <a href="/">Trang chủ</a> <i class="fa fa-angle-right"></i> </li>
        <li> <span>Tổng Biên Tập</span> <i class="fa fa-angle-right"></i> </li>
        <li> <span>@ViewBag.Title</span> </li>
    </ul>
    <div class="page-toolbar">
    </div>
}

<div class="col-md-6">
    <div class="portlet">
        <div class="portlet-header">
            Danh sách Chuyên Mục
        </div>
        <div class="portlet-body">
            <a href="#" data-url="@Url.Action("ShowDetailCatgeory", "CategoriesManage", new { IdCategory = 0 })" class="btn blue" onclick="OpenModalCustom(this)"><i class="fa fa-plus"></i>Thêm mới</a>
            <table id="tableCategories"
                   data-id-field="Id"
                   data-toggle="tableCategories"
                   data-show-refresh="true"
                   data-show-columns="true"
                   data-search="true">
                <thead>
                    <tr>
                        <th data-field="state" data-checkbox="true"></th>
                        <th data-field="OrderView" data-align="center" data-sortable="true">STT</th>
                        <th data-field="Name" data-align="left" data-sortable="true">Tên Danh mục</th>
                        <th data-field="Type" data-formatter="operateType" data-align="center" data-sortable="true">Loại Danh mục</th>
                        <th data-field="Active" data-formatter="operateActive" data-align="center">Trạng Thái</th>
                        <th data-field="Id" data-formatter="operateDelete" data-align="center">#</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<div class="col-md-6">
    <div class="portlet">
        <div class="portlet-header">
            Thông tin chi tiết Chuyên Mục
        </div>
        <div class="portlet-body">
            <div id="divDetailCatgory">
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">  
    var lstCategoryType = @Html.Raw(Json.Encode(ViewBag.lstCategoryType));

    var tableViewControl = $('#tableCategories');

    tableViewControl.bootstrapTable({
        method: "post",
        queryParams: "postQueryParams",
        url: "@Url.Action("GetListCategories", "CategoriesManage")",
        pagination: "true",
        sidePagination: "client",
        pageSize: 10,
        pageList: "[5,10,15]",
        select: true
    });

    tableViewControl.on('click-row.bs.table', function (e, row, $element) {
        $("#divDetailCatgory").load('@(Url.Action("ShowDetailCatgeory","CategoriesManage",null, Request.Url.Scheme))?IdCategory='+row.Id);
    });

    function postQueryParams(params) {
        params.IPS = 1; // 1 client pagination - 2 server pagination
        return params;
    }

    function operateName(value, row, index) {
        return [
                '<a href="#" data-url="../CategoriesManage/DetailNewsCategories?Idcategories='+row.Id+'" onclick="OpenModalCustom(this)">'+row.Name+'</a>'
        ].join('');
    }

    function operateActive(value, row, index) {
        if (value == true) return "Kích Hoạt"
        else
            return "Ngừng Kích Hoạt"
    }

    function operateType(value, row, index) {
        var result = $.grep(lstCategoryType, function(e){ return e.Value == value; });
        if (result[0] != undefined)            
            return result[0].Text;
        else
            return "";
    }

    function operateDelete(value, row, index) {
        return [
                '<i class="fa fa-trash-o btn-save" id="' + value + '" data-id="' + value + '" style="color:orangered;cursor:pointer;" onclick="DeleteCategory(this)">',
                '</i>'                
        ].join('');
    }

    function CreateOrSaveAlert(msgReturn,id)
    {        
        msg = msgReturn;
        if (id!=null && id>0 && msg=="Success")
        {
            tableViewControl.bootstrapTable('refresh');
            msg = "Lưu thay đổi thành công";
        }
        else
            if (id==0 && msg=="Success")
            {
                $('#ajaxModalProject').modal('toggle');
                tableViewControl.bootstrapTable('refresh');
                msg = "Tạo mới thành công";
            }
        bootbox.alert(msg);
    }

    function DeleteCategory(itm) {
        bootbox.confirm({
            message: "Bạn chắc chắn muốn xóa?",
            buttons: {
                confirm: {
                    className: 'btn-danger'
                },
                cancel: {
                    className: 'btn-success'
                }
            },
            callback: function (result) {
                if (result == true) {
                    $.ajax({
                        type: 'post',
                        url: '@Url.Action("DeleteCategory", "CategoriesManage")',
                        ajaxasync: true,
                        data: { idCategory: $(itm).attr('data-id')},
                        success: function (data) {
                            if (data == "Success")
                            {
                                tableViewControl.bootstrapTable('refresh');
                                bootbox.alert("Xóa dữ liệu thành công!");
                            }
                            else {
                                bootbox.alert(data);
                            }
                        },
                        error: function (data) {
                            bootbox.alert("Có lỗi xảy ra!");
                        }
                    });
                }
            }
        });
    }    
</script>
